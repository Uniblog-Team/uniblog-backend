name: Backend CI

# Disparadores: Se ejecuta en push a ramas feature/* y en Pull Requests hacia develop
on:
  push:
    branches: [ "feature/**" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  lint-and-test:
    name: Lint & Test Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.13"] # Especifica la versión de Python que usa tu proyecto

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5 # Acción para configurar Python
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Habilitar caché para dependencias de pip

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Linters (Flake8 and Black)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics # Ejemplo de config Flake8
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics # Ejemplo 2
        black --check . # Verifica el formato con Black sin modificar archivos

    # --- PASO PARA PRUEBAS (Cuando estén) ---
    - name: Run Tests (Pytest)
      run: |
        pytest
      # Por ahora, si no hay tests, pytest pasará sin encontrar ninguno.
      # Cuando agregues tests, este comando los ejecutará.